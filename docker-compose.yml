version: '3.8'

services:

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: 123456
      TZ: Asia/Seoul
    command:
      - --lower_case_table_names=0
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ 'CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD' ]
      start_period: 20s
      interval: 2s
      timeout: 5s
      retries: 10

  redis:
    container_name: redis
    image: redis:7.2.4
    restart: unless-stopped
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 2s
      interval: 2s
      timeout: 5s
      retries: 10

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    restart: unless-stopped
    ports:
      - 22181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.0
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    command: sh -c "((sleep 20 && kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic product-topic)&) && /etc/confluent/docker/run ">
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --topic product-topic --describe" ]
      start_period: 20s
      interval: 2s
      timeout: 10s
      retries: 10

  kotlinboot:
    container_name: kotlinboot
    image: kotlinboot:1.0.0
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      zookeeper:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      - DB_USER=appuser
      - DB_PASS=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_SERVER=kafka:9092
